/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment2;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author piiik98
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        
        income();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuTypeRadio = new javax.swing.ButtonGroup();
        background = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        incomeButton = new javax.swing.JButton();
        addMenuButton = new javax.swing.JButton();
        deleteMenuButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        menuPanel = new javax.swing.JPanel();
        incomePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        incomeTable = new javax.swing.JTable();
        totalIncomeLabel = new javax.swing.JLabel();
        addMenuPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        foodPrice = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        foodName = new javax.swing.JTextPane();
        addMenuStatus = new javax.swing.JLabel();
        doneButton = new javax.swing.JButton();
        foodType = new javax.swing.JRadioButton();
        drinkType = new javax.swing.JRadioButton();
        deleteMenuPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        deleteStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        background.setBackground(new java.awt.Color(255, 255, 255));

        buttonPanel.setBackground(new java.awt.Color(231, 76, 60));
        buttonPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        incomeButton.setBackground(new java.awt.Color(231, 76, 60));
        incomeButton.setForeground(new java.awt.Color(255, 255, 255));
        incomeButton.setText("Income");
        incomeButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        incomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomeButtonActionPerformed(evt);
            }
        });

        addMenuButton.setBackground(new java.awt.Color(231, 76, 60));
        addMenuButton.setForeground(new java.awt.Color(255, 255, 255));
        addMenuButton.setText("Add Menu");
        addMenuButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        addMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMenuButtonActionPerformed(evt);
            }
        });

        deleteMenuButton.setBackground(new java.awt.Color(231, 76, 60));
        deleteMenuButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteMenuButton.setText("Delete Menu");
        deleteMenuButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        deleteMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMenuButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(231, 76, 60));
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(incomeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addMenuButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(incomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        menuPanel.setBackground(new java.awt.Color(52, 152, 219));
        menuPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(52, 152, 219)));
        menuPanel.setLayout(new java.awt.CardLayout());

        incomeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Menu Code", "Menu Ordered", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(incomeTable);

        totalIncomeLabel.setText("Total Income: x");

        javax.swing.GroupLayout incomePanelLayout = new javax.swing.GroupLayout(incomePanel);
        incomePanel.setLayout(incomePanelLayout);
        incomePanelLayout.setHorizontalGroup(
            incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(incomePanelLayout.createSequentialGroup()
                .addGroup(incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(incomePanelLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(totalIncomeLabel))
                    .addGroup(incomePanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        incomePanelLayout.setVerticalGroup(
            incomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, incomePanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(totalIncomeLabel)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        menuPanel.add(incomePanel, "card2");

        foodPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                foodPriceKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(foodPrice);

        jLabel1.setText("Food Name");

        jLabel2.setText("Food Price");

        jScrollPane3.setViewportView(foodName);

        addMenuStatus.setText("Food Has Been Added");

        doneButton.setText("Done");
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        foodType.setText("Food");
        foodType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodTypeActionPerformed(evt);
            }
        });

        drinkType.setText("Drink");

        javax.swing.GroupLayout addMenuPanelLayout = new javax.swing.GroupLayout(addMenuPanel);
        addMenuPanel.setLayout(addMenuPanelLayout);
        addMenuPanelLayout.setHorizontalGroup(
            addMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMenuPanelLayout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(addMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMenuPanelLayout.createSequentialGroup()
                        .addComponent(addMenuStatus)
                        .addGap(128, 128, 128))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMenuPanelLayout.createSequentialGroup()
                        .addGroup(addMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(addMenuPanelLayout.createSequentialGroup()
                                .addGroup(addMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(52, 52, 52))
                            .addGroup(addMenuPanelLayout.createSequentialGroup()
                                .addComponent(foodType)
                                .addGap(18, 18, 18)))
                        .addGroup(addMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(drinkType)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doneButton))
                        .addGap(90, 90, 90))))
        );
        addMenuPanelLayout.setVerticalGroup(
            addMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMenuPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(addMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foodType)
                    .addComponent(drinkType))
                .addGap(18, 18, 18)
                .addGroup(addMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doneButton)
                .addGap(25, 25, 25)
                .addComponent(addMenuStatus)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        menuPanel.add(addMenuPanel, "card3");

        jLabel3.setText("Delete MENU");

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Code", "Name", "Price"
            }
        ));
        jScrollPane4.setViewportView(dataTable);

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        deleteStatus.setText("Delete Status");

        javax.swing.GroupLayout deleteMenuPanelLayout = new javax.swing.GroupLayout(deleteMenuPanel);
        deleteMenuPanel.setLayout(deleteMenuPanelLayout);
        deleteMenuPanelLayout.setHorizontalGroup(
            deleteMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteMenuPanelLayout.createSequentialGroup()
                .addGroup(deleteMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteMenuPanelLayout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel3))
                    .addGroup(deleteMenuPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete))
                    .addGroup(deleteMenuPanelLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(deleteStatus)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        deleteMenuPanelLayout.setVerticalGroup(
            deleteMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteMenuPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(deleteMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteMenuPanelLayout.createSequentialGroup()
                        .addComponent(delete)
                        .addGap(140, 140, 140))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, deleteMenuPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteStatus)
                        .addGap(14, 14, 14))))
        );

        menuPanel.add(deleteMenuPanel, "card4");

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here: Back to welcome panel
        Welcome welcome = new Welcome();
        welcome.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_backButtonActionPerformed

    private void incomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomeButtonActionPerformed
        // TODO add your handling code here: This is for opening income table panel
        
        //Delete tab
        menuPanel.removeAll();
        menuPanel.repaint();
        menuPanel.revalidate();
        
        //Showing tab
        menuPanel.add(incomePanel);
        menuPanel.repaint();
        menuPanel.revalidate();
        
        income();
        
    }//GEN-LAST:event_incomeButtonActionPerformed

    private void addMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMenuButtonActionPerformed
        // TODO add your handling code here: This is for opening Add Menu panel
        
        //Delete tab
        menuPanel.removeAll();
        menuPanel.repaint();
        menuPanel.revalidate();
        
        //Showing tab
        menuPanel.add(addMenuPanel);
        menuPanel.repaint();
        menuPanel.revalidate();
        
        addMenu();
        
    }//GEN-LAST:event_addMenuButtonActionPerformed

    private void deleteMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMenuButtonActionPerformed
        // TODO add your handling code here: This is for opening Delete Menu Panel
        
        //Delete tab
        menuPanel.removeAll();
        menuPanel.repaint();
        menuPanel.revalidate();
        
        //Showing tab
        menuPanel.add(deleteMenuPanel);
        menuPanel.repaint();
        menuPanel.revalidate();
        
        deleteMenu();
        
    }//GEN-LAST:event_deleteMenuButtonActionPerformed

    private void foodPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_foodPriceKeyTyped
        // TODO add your handling code here: Validation for Price
        char c = evt.getKeyChar();
        if (Character.isLetter(c) && !evt.isAltDown()){
            evt.consume();
        }
    }//GEN-LAST:event_foodPriceKeyTyped

    private void foodTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodTypeActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here: To Delete the menu
        DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
        try{
            int SelectedRowIndex = dataTable.getSelectedRow();
            model.removeRow(SelectedRowIndex);
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        
        try {
            //Print the new menu and store it into new list
            FileWriter fw = new FileWriter("doc/data.csv"); 
            BufferedWriter bw = new BufferedWriter(fw);
            
            for (int i = 0; i < dataTable.getRowCount(); i++){
                for (int j = 0; j < dataTable.getColumnCount(); j++){
                    bw.write(dataTable.getModel().getValueAt(i, j) + ",");
                }
                bw.write("\n");
            }
            bw.close();
            fw.close();
//            System.out.println("Here's the menu:");
//            for (List<String> i : menuList) {
//                    System.out.println(menuList.get(newMenuNo).get(0) + newMenuNo + "\t\t" + menuList.get(newMenuNo).get(1) + "\t\t $" + menuList.get(newMenuNo).get(2));
//                    fw.append(i.get(0));
//                    fw.append(',');
//                    fw.append(i.get(1));
//                    fw.append(',');
//                    fw.append(i.get(2));
//                    fw.append('\n');
//                    newMenuNo++;
//            }
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doneButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);   
                
            }    
        });
        
        
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMenuButton;
    private javax.swing.JPanel addMenuPanel;
    private javax.swing.JLabel addMenuStatus;
    private javax.swing.JButton backButton;
    private javax.swing.JPanel background;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton delete;
    private javax.swing.JButton deleteMenuButton;
    private javax.swing.JPanel deleteMenuPanel;
    private javax.swing.JLabel deleteStatus;
    private javax.swing.JButton doneButton;
    private javax.swing.JRadioButton drinkType;
    private javax.swing.JTextPane foodName;
    private javax.swing.JTextPane foodPrice;
    private javax.swing.JRadioButton foodType;
    private javax.swing.JButton incomeButton;
    private javax.swing.JPanel incomePanel;
    private javax.swing.JTable incomeTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel menuPanel;
    private javax.swing.ButtonGroup menuTypeRadio;
    private javax.swing.JLabel totalIncomeLabel;
    // End of variables declaration//GEN-END:variables

    private void income() {
        
        String fileName = "doc/income.csv";
	File file = new File(fileName); //Read about file
	List<List<String>> incomeList = new ArrayList<>();

	try {
		Scanner inputMenu = new Scanner(file);
                System.out.println("Code \t\tFood\t\t\tPrice");
		while (inputMenu.hasNext()) {
                        String data = inputMenu.nextLine();
        		String[] items = data.split(",");
			incomeList.add(Arrays.asList(items));
                        DefaultTableModel incomeModel = (DefaultTableModel) incomeTable.getModel();
                        incomeModel.addRow(items);
                        
			}
			inputMenu.close();
	} catch (FileNotFoundException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
        
        try {
            System.out.println("Food Sold");
            int foodNo = 0;
            double totalFoodIncome = 0;
            for (List<String> line : incomeList) {
                System.out.println(incomeList.get(foodNo).get(1) + "\t\t $" + incomeList.get(foodNo).get(2));
                double doubleFoodPrice = Double.parseDouble(incomeList.get(foodNo).get(2));
                totalFoodIncome += doubleFoodPrice;
                foodNo++;
            totalIncomeLabel.setText("Total Income: S$" + totalFoodIncome);
            } 
        }catch (IndexOutOfBoundsException e) {
            e.printStackTrace();
	}
   
            
        
    }

    private void addMenu() {
        Scanner scanOption = new Scanner(System.in);	
        FileWriter pw;
	StringBuilder sb;
		try {
			pw = new FileWriter("doc/data.csv",true);
			sb = new StringBuilder();
			// Starting get the new menu from user
//			while (true) {
//				System.out.println("Enter the menu code: \nD. Drink\nF. Food");
//				String foodType = scanOption.next();
//				if (foodType.contains("D") || foodType.contains("F")) {
//					pw.append(foodType);
//			        pw.append(',');
//					break;
//				} else {
//					System.out.print("Sorry... Wrong Code");
//				}
//			}
                        
//                        foodType.addItemListener(new ItemListener() {
//                            @Override
//                            public void itemStateChanged(ItemEvent e) {
//                                if (foodType.isSelected()){
//                                   String menuType = "D";
//                                    foodType.setText("Choose Menu Type: Drink");    
//                                } else{
//                                    String menuType = "F";
//                                    foodType.setText("Choose Menu Type: Food");
//                                }
//                                
//                            }
//                        });
//                        
                            
                        ButtonGroup menuTypeGroup = new ButtonGroup();
                        
                        menuTypeGroup.add(foodType);
                        menuTypeGroup.add(drinkType);
                        
//                        DecimalFormat format = new DecimalFormat("0.#");
//                        String newMenuPrice = format.format(menuPrice).toString();
                        
                        doneButton.addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(ActionEvent e) {
                                try {
                                    String menuName = foodName.getText();
                                    String menuPrice = foodPrice.getText();
                                    if (foodType.isSelected()){
                                        pw.append("F");
                                        String type = "food";
                                    } else {
                                        pw.append("D");
                                        String type = "drink";
                                    }  
                                    pw.append(',');
                                    pw.append(menuName);
                                    pw.append(',');
                                    pw.append(menuPrice);
                                    pw.append("\n");
                                    
                                    pw.flush();
                                    pw.close();
                                    
                                    if (foodType.isSelected()){
                                        addMenuStatus.setText("New food " + menuName + " with price S$ " + menuPrice + "has been added");
                                    } else {
                                        addMenuStatus.setText("New drink " + menuName + " with price S$ " + menuPrice + "has been added");
                                    }  
                                    
                                    foodName.setText("");
                                    foodPrice.setText("");
                                    
                                            
//                                
                                } catch (IOException ex) {
                                    Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                        });
//                          
//                        
//                        
//                        
//                        
//
//                        System.out.println("Menu Added");
//                                
//                               
//                            
//                        
//                        
//			System.out.print("Enter the menu Name: ");
//			String menuName = scanOption.next();
//			pw.append(menuName);
//                        pw.append(',');
//
//
//
//			while (true) {													// Loop that will detele the .0 if not decimal
//                            DecimalFormat format = new DecimalFormat("0.#");
//                            System.out.print("Enter the " + menuName + " Price: $");
//                            Double menuPrice = scanOption.nextDouble();
//                            if (menuPrice < 0){
//                                System.out.println("Price can not below than 0");
//                            } else {
//                                String newMenuPrice = format.format(menuPrice).toString();
//                                pw.append(newMenuPrice);
//                                pw.append('\n');
//                                break;
//                            }
//			}
//                        pw.flush();
//                        pw.close();
//
//                        System.out.println("Menu Added");
//
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
                            
              
    }

    private void deleteMenu() {
        String fileName = "doc/data.csv";
	File file = new File(fileName); //Read about file
	List<List<String>> menuList = new ArrayList<>();

	try {
		Scanner inputMenu = new Scanner(file);
                System.out.println("Code \t\tFood\t\t\tPrice");
		while (inputMenu.hasNext()) {
                        String data = inputMenu.nextLine();
        		String[] items = data.split(",");
			menuList.add(Arrays.asList(items));
                        DefaultTableModel dataModel = (DefaultTableModel) dataTable.getModel();
                        dataModel.addRow(items);
                        
			}
			inputMenu.close();
                       
	} catch (FileNotFoundException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
        
        
        
    }
}
